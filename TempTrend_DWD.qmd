---
title: "TempTrend_DWD"
render: false
---

```{r init, message=F, warning=F, error=F}
suppressPackageStartupMessages({
  library(rvest)
  library(stringr)
  library(httr)
  library(dplyr)
  library(readr)
  library(lubridate)
  library(fs)
  library(purrr)
  library(ggplot2)
})
```

```{r}
meta_geo_clean <- readRDS("meta_go_clean.rds")
all_data <- readRDS("all_data.rds")
```

## warum und wie ändern sich die Stationsparameter über die Jahre?

!! 10-min Messwerte erst seit den 90ern

### Standortveränderungen

```{r}
library(dplyr)

station_moves <- meta_geo_clean %>%
  arrange(STATIONS_ID, von_datum) %>%
  group_by(STATIONS_ID) %>%
  mutate(
    lat_diff = latitude - lag(latitude),
    lon_diff = longitude - lag(longitude),
    alt_diff = Stationshoehe - lag(Stationshoehe),
    pos_change = sqrt(lat_diff^2 + lon_diff^2),  # in Grad (~111 km/°)
    sign_move = pos_change > 0.001 | abs(alt_diff) > 5  # grob: >100 m oder >5 m Höhe
  ) %>%
  filter(sign_move == TRUE) %>%
  select(STATIONS_ID, Stationsname, von_datum, bis_datum, latitude, longitude, Stationshoehe, lat_diff, lon_diff, alt_diff)
```

```{r}
# Beispielstation mit erkennbarer Verlagerung
example_station <- station_moves$STATIONS_ID[1]
change_date <- station_moves$von_datum[1]

# Zeitfenster definieren (±180 Tage)
range_start <- change_date - 180
range_end   <- change_date + 180

# Temperaturdaten extrahieren
temp_change <- all_data %>%
  filter(STATIONS_ID == example_station,
         MESS_DATUM >= range_start,
         MESS_DATUM <= range_end) %>%
  mutate(date = as.Date(MESS_DATUM)) %>%
  group_by(date) %>%
  summarise(
    T_mean = mean(TT_10, na.rm = TRUE),
    .groups = "drop"
  )
```

```{r}

messzeitraum <- all_data %>%
  group_by(STATIONS_ID) %>%
  summarise(
    messung_von = min(MESS_DATUM, na.rm = TRUE),
    messung_bis = max(MESS_DATUM, na.rm = TRUE),
    .groups = "drop"
  )


meta_relevant <- meta_geo_clean %>%
  inner_join(messzeitraum, by = "STATIONS_ID") %>%
  filter(von_datum <= messung_bis, bis_datum >= messung_von)

```

```{r}
station_moves <- meta_relevant %>%
  arrange(STATIONS_ID, von_datum) %>%
  group_by(STATIONS_ID) %>%
  mutate(
    lat_diff = latitude - lag(latitude),
    lon_diff = longitude - lag(longitude),
    alt_diff = Stationshoehe - lag(Stationshoehe),
    pos_change = sqrt(lat_diff^2 + lon_diff^2),  # in Grad (~111 km/°)
    sign_move = pos_change > 0.001 | abs(alt_diff) > 5  # grob: >100 m oder >5 m Höhe
  ) %>%
  filter(sign_move == TRUE) %>%
  select(STATIONS_ID, Stationsname, von_datum, bis_datum, latitude, longitude, Stationshoehe, lat_diff, lon_diff, alt_diff)

```

```{r}
# Beispielstation mit erkennbarer Verlagerung
example_station <- station_moves$STATIONS_ID[1]
change_date <- station_moves$von_datum[1]

# Zeitfenster definieren (±180 Tage)
range_start <- change_date - 180
range_end   <- change_date + 180

# Temperaturdaten extrahieren
temp_change <- all_data %>%
  filter(STATIONS_ID == example_station,
         MESS_DATUM >= range_start,
         MESS_DATUM <= range_end) %>%
  mutate(date = as.Date(MESS_DATUM)) %>%
  group_by(date) %>%
  summarise(
    T_mean = mean(TT_10, na.rm = TRUE),
    .groups = "drop"
  )
```

### Stationen mit Messdaten vor 1950

```{r}
library(dplyr)
library(lubridate)

# Alle Konfigurationen mit Messstart vor 1950
stations_pre1950 <- meta_geo_clean %>%
  filter(von_datum < ymd("1950-01-01")) %>%
  arrange(STATIONS_ID, von_datum) %>%
  group_by(STATIONS_ID, Stationsname) %>%
  summarise(
    erste_aufzeichnung = min(von_datum),
    letzte_konfig = max(bis_datum),
    hoehe = first(Stationshoehe),
    lat = first(latitude),
    lon = first(longitude),
    .groups = "drop"
  )

```

```{r}
messzeitraum <- all_data %>%
  group_by(STATIONS_ID) %>%
  summarise(
    erste_messung = min(MESS_DATUM, na.rm = TRUE),
    letzte_messung = max(MESS_DATUM, na.rm = TRUE),
    .groups = "drop"
  )

# Kombinieren
stations_pre1950_with_data <- stations_pre1950 %>%
  left_join(messzeitraum, by = "STATIONS_ID") %>%
  filter(!is.na(erste_messung))  # nur mit tatsächlich vorhandenen Daten

```

```{r}
set.seed(42)
chosen_station <- stations_pre1950_with_data %>%
  slice_sample(n = 1)

chosen_station_id <- chosen_station$STATIONS_ID
chosen_station_name <- chosen_station$Stationsname

print(chosen_station)

```

```{r}

temp_daily <- all_data %>%
  filter(STATIONS_ID == chosen_station_id) %>%
  mutate(date = as.Date(MESS_DATUM)) %>%
  group_by(date) %>%
  summarise(
    t_mean = mean(TT_10, na.rm = TRUE),
    .groups = "drop"
  )

```

```{r, fig.width=12, fig.height=3}


ggplot(temp_daily, aes(x = date, y = t_mean)) +
  geom_line(color = "steelblue", alpha = 0.7) +
  labs(
    title = paste("Tägliche Mitteltemperatur – Station", chosen_station_name),
    subtitle = paste("STATIONS_ID:", chosen_station_id),
    x = "Datum",
    y = "Temperatur [°C]"
  ) +
  theme_minimal()

```

```{r}

temp_daily <- all_data %>%
  filter(STATIONS_ID == chosen_station_id) %>%
  mutate(date = as.Date(MESS_DATUM)) %>%
  group_by(date) %>%
  summarise(
    t_median = median(TT_10, na.rm = TRUE),
    .groups = "drop"
  )

```

```{r, fig.width=12, fig.height=3}


ggplot(temp_daily, aes(x = date, y = t_median)) +
  geom_line(color = "steelblue", alpha = 0.7) +
  labs(
    title = paste("Tägliche Mitteltemperatur – Station", chosen_station_name),
    subtitle = paste("STATIONS_ID:", chosen_station_id),
    x = "Datum",
    y = "Temperatur [°C]"
  ) +
  theme_minimal()

```

```{r}
sessionInfo()
```
